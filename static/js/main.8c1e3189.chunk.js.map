{"version":3,"sources":["const/ethereum.js","const/backends.js","utils/ethereum.js","const/react-messages.js","utils/http.js","utils/state.js","state/state.js","state/reactions/back-end-request.js","state/reactions/back-end-response.js","state/reactions/update-token-meta.js","state/reactions/back-end-polling.js","state/reactions/misc.js","state/reactions/update-url.js","state/init.js","components/TransferArrow/index.js","components/TokenLogo/index.js","components/WarningIcon/index.js","components/InfoIcon/index.js","components/Button/index.js","modules/ethereum/provider.js","App.js","serviceWorker.js","index.js"],"names":["UNKNOWN_NETWORK","Object","freeze","chainId","name","NETWORK_BY_CHAIN_ID","1","ensAddress","3","2","4","5","42","61","62","DEFAULT_DELEGATED_TX_BACK_ENDS","formatEthereumAddress","address","slice","formatTokenValue","value","decimals","toString","test","pow","match","replace","padEnd","padStart","substring","length","substr","parseTokenValueFromInput","inputValue","parts","split","num","signData","state","standard","data","a","provider","ethersProvider","send","currentEthereumAccount","res","WARNING_NO_WEB3","target","rel","href","WARNING_WRONG_NETWORK","targetNetwork","currentNetwork","WARNING_UNKNOWN_NETWORK","network","WARNING_CUSTOM_MESSAGE","message","WARNING_UNABLE_TO_CONNECT_WEB3","WARNING_WRONG_URL_PARAMETER","WARNING_BACK_END_ERROR","url","WARNING_BACK_END_INVALID_RESPONSE","INFO_PROCESSING","httpRequest","method","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","onload","readyState","status","JSON","parse","responseText","parsed","error","e","onerror","stringify","httpGet","httpPost","getBackEndContracts","backEndsByContractReadOnly","contractAddress","filter","b","networkChainId","selectedNetwork","updateUrl","action","window","history","replaceState","document","title","location","pathname","functionName","functionArguments","join","customBackEndsList","successRedirectUrl","fixed","observable","selectedNetworkNameReadOnly","globalInfoMessage","globalWarningMessage","initWarningMessage","networkWarningMessage","backendWarningMessage","contractSymbolReadOnly","contractDecimalsReadOnly","backEndsMeta","approvedDelegationRequest","approvedDelegationResponse","delegationConfirmationRequestPending","find","targetNetworks","map","WARNING_SUPPORTED_CONTRACT_WRONG_NETWORK","Array","from","Set","c","networkName","console","log","backEndRequested","lastBackEndRequestId","requestBackEnd","warningMessageReadOnly","backEndRequestId","backEndErrors","all","meta","functions","f","warn","push","request","id","signatureOptions","r","responses","runInAction","bestBackEnd","reduce","best","be","fee","assign","toJS","clearAndRequest","observe","oldFixed","signatureOptionsPriority","signOptionsByPriority","sort","o1","o2","indexOf","signature","signatureStandard","signOption","dataToSign","rej","nextStandard","Error","onClick","then","catch","pop","signatureStandards","o","requestId","response","result","loadTokenMeta","backEnds","constants","symbol","pollingInterval","updateFromBackEnd","actualStatus","clearInterval","txHash","INFO_TRANSACTION_MINED","transactionHash","key","INFO_WAIT_FOR_TRANSACTION","setInterval","reason","WARNING_TRANSACTION_FAILED","forEach","prop","search","parseInt","values","net","customBackEnds","backEndsReady","addBackEnds","backEnd","contracts","contractBackEnd","concat","interval","i","arr","TransferArrow","className","TokenLogo","props","tokenAddress","assetUrl","src","alt","WarningIcon","version","xmlns","x","y","width","height","viewBox","fill","d","InfoIcon","Button","loading","rest","children","wrapEthersProvider","web3Provider","reportStatus","getWeb3Provider","providers","Web3Provider","currentProvider","ethereum","web3","Web3","enable","getContractNetworks","isCurrentNetworkTarget","isButtonActive","App","tick","accountUpdateTimeout","tickerInterval","ticker","setState","updateFromProvider","listAccounts","account","getNetwork","setTimeout","contractsInOtherNetworks","componentDidMount","actionButtonClick","onRecipientChange","onValueChange","clearTimeout","this","sender","recipient","Math","feeData","fees","warning","isLoading","tzOffset","Date","getTimezoneOffset","nowUtc","now","expiresIn","max","expiresAt","getTime","toTimeString","onChange","style","disabled","React","PureComponent","observer","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c1e3189.chunk.js","sourcesContent":["export const UNKNOWN_NETWORK = Object.freeze({\n  chainId: -1,\n  name: 'unknown-network'\n});\n\nexport const NETWORK_BY_CHAIN_ID = {\n  1: {\n    chainId: 1,\n    ensAddress: '0x314159265dd8dbb310642f98f50c066173c1259b',\n    name: 'homestead'\n  },\n  3: {\n    chainId: 3,\n    ensAddress: '0x112234455c3a32fd11230c42e7bccd4a84e02010',\n    name: 'ropsten'\n  },\n  2: {\n    chainId: 2,\n    name: 'morden'\n  },\n  4: {\n    chainId: 4,\n    ensAddress: '0xe7410170f87102DF0055eB195163A03B7F2Bff4A',\n    name: 'rinkeby'\n  },\n  5: {\n    chainId: 5,\n    ensAddress: '0x112234455c3a32fd11230c42e7bccd4a84e02010',\n    name: 'goerli'\n  },\n  42: {\n    chainId: 42,\n    name: 'kovan'\n  },\n  61: {\n    chainId: 61,\n    name: 'classic'\n  },\n  62: {\n    chainId: 62,\n    name: 'classicTestnet'\n  }\n};\n","// The widget will try to get metadata from all back ends listed here, if none specified as a widget's URL parameter\nexport const DEFAULT_DELEGATED_TX_BACK_ENDS = [\n  'https://api-qa.dreamteam.gg/blockchain/delegated-tx',\n  'https://api.dreamteam.gg/blockchain/delegated-tx',\n  'https://dapp.ml/delegated-tx-mainnet',\n  'https://dapp.ml/delegated-tx'\n];\n","export function formatEthereumAddress(address) {\n  if (!address) {\n    return '0x????..????';\n  }\n  return address.slice(0, 6) + '..' + address.slice(-4);\n}\n\nexport function formatTokenValue(value, decimals = 18) {\n  value = value.toString();\n  if (/e\\+[0-9]+$/.test(value)) {\n    const pow = +value.match(/[0-9]+$/)[0];\n    value = value.replace(/\\./, '').replace(/e\\+[0-9]+$/, '');\n    value = value.padEnd(1 + pow, '0');\n  }\n  value = value.padStart(decimals + 1, '0');\n  return (\n    (value.substring(0, value.length - decimals).replace(/^0+/, '') || '0') +\n    '.' +\n    value.substr(-decimals, 2)\n  );\n}\n\nexport function parseTokenValueFromInput(inputValue, decimals = 18) {\n  const parts = inputValue.split('.');\n  const num = parts[0] + (parts[1] || '').padEnd(2, '0');\n  return num.padEnd(num.length + decimals - 2, '0').replace(/^0+/, '') || '0';\n}\n\nexport function isValidEthereumAddress(address) {\n  return typeof address === 'string' && /0x[0-9a-f]{40}/i.test(address);\n}\n\nexport async function signData(state, standard, data) {\n  const provider = state.ethersProvider;\n  try {\n    if (standard === 'eth_signTypedData') {\n      const res = await provider.send('eth_signTypedData', [\n        data,\n        state.currentEthereumAccount.toString()\n      ]);\n      return res;\n    } else if (standard === 'eth_personalSign') {\n      const res = await provider.send('eth_sign', [\n        data,\n        state.currentEthereumAccount.toString()\n      ]);\n      return res;\n    }\n  } catch (e) {\n    return '';\n  }\n}\n","import React from 'react';\nimport { formatEthereumAddress } from '../utils/ethereum';\n\nexport const WARNING_NO_WEB3 = (\n  <span>\n    In order to use this delegated transactions service, you need to browse this\n    page with{' '}\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://metamask.io\">\n      Metamask wallet\n    </a>{' '}\n    extension or from your{' '}\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://trustwallet.com\">\n      mobile wallet&apos;s\n    </a>{' '}\n    embedded DApp browser (if supported).\n  </span>\n);\n\nexport const WARNING_WRONG_NETWORK = (targetNetwork, currentNetwork) => (\n  <span>\n    Please, switch your wallet to{' '}\n    <strong>\n      {targetNetwork === 'homestead' ? 'mainnet' : targetNetwork} network\n    </strong>{' '}\n    (it is currently on {currentNetwork} network).\n  </span>\n);\n\nexport const WARNING_UNKNOWN_NETWORK = network => (\n  <span>\n    Unknown network selected in your wallet ({network}). Please, switch to main\n    network or known testnets (ropsten/kovan)\n  </span>\n);\n\nexport const WARNING_CUSTOM_MESSAGE = message => <span>{message}</span>;\n\nexport const WARNING_UNABLE_TO_CONNECT_WEB3 = message => (\n  <span>Unable to connect to your wallet. {message}</span>\n);\n\nexport const WARNING_WRONG_URL_PARAMETER = (name, value) => (\n  <span>\n    Configuration error: unknown or wrong URL parameter &quot;{name}\n    &quot;=&quot;{value}&quot;.\n  </span>\n);\n\nexport const WARNING_CONTRACT_NOT_SUPPORTED = contractAddress => (\n  <span>\n    There is no back end for contract {formatEthereumAddress(contractAddress)}{' '}\n    found which supports delegated transactions. If this contract indeed\n    supports delegated transactions, you may add it by contributing to{' '}\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href=\"https://github.com/ZitRos/ethereum-delegated-tx-widget\"\n    >\n      this project\n    </a>\n    .\n  </span>\n);\n\nexport const WARNING_SUPPORTED_CONTRACT_WRONG_NETWORK = (\n  currentNetwork,\n  targetNetworks = []\n) => (\n  <span>\n    Configured back ends support only{' '}\n    <strong>\n      {targetNetworks\n        .map(targetNetwork =>\n          targetNetwork === 'homestead' ? 'mainnet' : targetNetwork\n        )\n        .join(' or ')}\n    </strong>{' '}\n    network{targetNetworks.length > 1 ? 's' : ''} for this contract. Please,{' '}\n    switch your wallet to {targetNetworks.length > 1 ? 'these' : 'this'} network\n    {targetNetworks.length > 1 ? 's' : ''} (it is currently on {currentNetwork}{' '}\n    network).\n  </span>\n);\n\nexport const WARNING_BACK_END_ERROR = (url, res) => (\n  <span>\n    Delegated back end error ({url}): {res}\n    <br />\n    <strong>\n      <u>\n        Check your token balance or switch to another account in your wallet\n      </u>\n    </strong>\n  </span>\n);\n\nexport const WARNING_BACK_END_INVALID_RESPONSE = (url, res) => (\n  <span>\n    Delegated back end {url} invalid response: {res}\n  </span>\n);\n\nexport const WARNING_CONFIRMATION_BACK_END_ERROR = (url, message) => (\n  <span>\n    Unable to confirm delegated request. Delegated back end {url} responds with\n    this error: {message}\n    <br />\n    <strong>\n      <u>\n        Check your token balance or switch to another account in your wallet\n      </u>\n    </strong>\n  </span>\n);\n\nexport const WARNING_TRANSACTION_FAILED = (requestId, reason = '') => (\n  <span>\n    Unfortunately, delegated transaction {requestId} has failed.{' '}\n    {reason\n      ? `${reason}`\n      : 'This could happen due to request expiration, network conditions or due to failing delegated back end. However, you can retry.'}\n  </span>\n);\n\nexport const INFO_PLEASE_SIGN = nextStandard => (\n  <span>\n    Please, confirm the signature in your wallet. If nothing happens, try\n    re-opening your wallet.\n    {nextStandard ? (\n      <span>\n        {' '}\n        You can also try using the{' '}\n        <a href=\"#x\" onClick={nextStandard}>\n          <b>next signature standard</b>\n        </a>\n        .\n      </span>\n    ) : null}\n  </span>\n);\n\nexport const INFO_PLEASE_SIGN_AGAIN = signatureStandards => (\n  <span>\n    For some reason, we were unable to get a signature from you. Please, try\n    again. Available signature standards: {signatureStandards.join(', ')}\n  </span>\n);\n\nexport const INFO_PROCESSING = <span>Processing, please wait...</span>;\n\nexport const INFO_WAIT_FOR_TRANSACTION = (txHash, network = 'mainnet') => (\n  <span>\n    Your transaction{' '}\n    {txHash ? (\n      <span key=\"span-swan\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`https://${\n            network === 'mainnet' ? '' : network + '.'\n          }etherscan.io/tx/${txHash}`}\n        >\n          {formatEthereumAddress(txHash)}\n        </a>{' '}\n      </span>\n    ) : null}\n    is on its way! Please wait until it is mined, it might take some time.\n  </span>\n);\n\nexport const INFO_TRANSACTION_MINED = (txHash, network = 'mainnet') => (\n  <span>\n    Done! Your transaction is mined:{' '}\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href={`https://${\n        network === 'mainnet' ? '' : network + '.'\n      }etherscan.io/tx/${txHash}`}\n    >\n      {formatEthereumAddress(txHash)}\n    </a>\n  </span>\n);\n","async function httpRequest(url, method = 'GET', data = undefined) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(method, url, true);\n    if (data) {\n      xhr.setRequestHeader('Content-Type', 'application/json');\n    }\n    xhr.onload = () => {\n      if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {\n        resolve(JSON.parse(xhr.responseText));\n      } else {\n        if (!xhr.responseText) {\n          reject(`HTTPCODE ${xhr.status}`);\n          return;\n        }\n        try {\n          const parsed = JSON.parse(xhr.responseText);\n          reject(\n            (parsed && (parsed.error || parsed)) ||\n              `HTTPCODE ${xhr.status}, ${xhr.responseText}`\n          );\n          return;\n        } catch (e) {\n          reject(xhr.responseText);\n        }\n      }\n    };\n    xhr.onerror = () => reject('request failed');\n    xhr.send(data && JSON.stringify(data));\n  });\n}\n\nexport const httpGet = async url => httpRequest(url);\nexport const httpPost = async (url, data) => httpRequest(url, 'POST', data);\n","import { action } from 'mobx';\n\nexport const getBackEndContracts = state =>\n  (state.backEndsByContractReadOnly[state.contractAddress] &&\n    state.backEndsByContractReadOnly[state.contractAddress].length &&\n    state.backEndsByContractReadOnly[state.contractAddress].filter(\n      b => b.networkChainId === state.selectedNetwork.chainId\n    )) ||\n  [];\n\nexport const updateUrl = action(state => {\n  window.history.replaceState(\n    {},\n    document.title,\n    `${window.location.pathname}?contractAddress=${\n      state.contractAddress\n    }&functionName=${\n      state.functionName\n    }&functionArguments=${state.functionArguments.join(',')}${\n      state.customBackEndsList.length\n        ? `&customBackEnds=${state.customBackEndsList.join(',')}`\n        : ''\n    }${\n      state.successRedirectUrl\n        ? `&successRedirectUrl=${state.successRedirectUrl}`\n        : ''\n    }${state.fixed ? '&fixed' : ''}`\n  );\n});\n","import { observable } from 'mobx';\nimport {\n  UNKNOWN_NETWORK,\n  NETWORK_BY_CHAIN_ID,\n  WARNING_NO_WEB3,\n  WARNING_CONTRACT_NOT_SUPPORTED,\n  WARNING_SUPPORTED_CONTRACT_WRONG_NETWORK\n} from '../const';\n\nconst state = observable({\n  currentEthereumAccount: '',\n  targetNetwork: NETWORK_BY_CHAIN_ID[1], // Default to mainnet\n  selectedNetwork: UNKNOWN_NETWORK, // Network currently selected by user\n  selectedNetworkNameReadOnly: UNKNOWN_NETWORK.name,\n  ethersProvider: null,\n\n  globalInfoMessage: null, // When set, displayed if warnings are empty\n  globalWarningMessage: null, // Displayed on top of all other warnings if set\n  initWarningMessage: WARNING_NO_WEB3,\n  networkWarningMessage: null,\n  backendWarningMessage: null,\n\n  contractAddress: '0x82f4ded9cec9b5750fbff5c2185aee35afc16587',\n  contractSymbolReadOnly: 'DREAM', // Updates automatically once `contractAddress` changes\n  contractDecimalsReadOnly: 6, // Updates automatically once `contractAddress` changes\n  functionName: 'transfer',\n  functionArguments: ['0x17A813dF7322F8AAC5cAc75eB62c0d13B8aea29D', '9990000'],\n  fixed: false, // Whether inputs are editable or not\n  successRedirectUrl: '',\n\n  customBackEndsList: [], // Passed as URL parameter\n  backEndsMeta: [], // Metadata of all back ends collected from root endpoint. See ./init\n  backEndsByContractReadOnly: {}, // Map contract => [back end 1, back end 2, ...]. Computed within backEndsMeta\n\n  // Best back end response (where the fee is the lowest) + .meta with back end metadata (such as .meta.url)\n  approvedDelegationRequest: null, // Object - response of /request + .meta property (.meta.url)\n  approvedDelegationResponse: null, // Object - response of /response + .meta property (.meta.url)\n  delegationConfirmationRequestPending: false,\n\n  // Refer to this property to understand whether there are any warning messages\n  get warningMessageReadOnly() {\n    return (\n      state.globalWarningMessage ||\n      state.initWarningMessage ||\n      state.networkWarningMessage ||\n      state.backendWarningMessage ||\n      (!state.backEndsByContractReadOnly[state.contractAddress] &&\n        WARNING_CONTRACT_NOT_SUPPORTED(state.contractAddress)) ||\n      (!state.backEndsByContractReadOnly[state.contractAddress].find(\n        b => b.networkChainId === state.selectedNetwork.chainId\n      ) && // Nado eshe podymat'\n        WARNING_SUPPORTED_CONTRACT_WRONG_NETWORK(\n          state.selectedNetwork.name,\n          Array.from(\n            new Set(\n              state.backEndsByContractReadOnly[state.contractAddress].map(\n                c => c.networkName\n              )\n            )\n          )\n        ))\n    );\n  }\n});\n\nconsole.log('state', state);\n\nexport default state;\n","import { observe, action, runInAction, toJS } from 'mobx';\nimport { WARNING_BACK_END_ERROR } from '../../const';\nimport { getBackEndContracts, httpPost } from '../../utils';\nimport state from '../state';\n\nlet backEndRequested = false;\nlet lastBackEndRequestId = 0;\n\nconst requestBackEnd = action(async () => {\n  // Ignore if request is already made or there are any warning messages\n  if (!!state.warningMessageReadOnly || backEndRequested) {\n    return;\n  }\n\n  backEndRequested = true;\n  const backEndRequestId = ++lastBackEndRequestId;\n\n  // Request back end\n  let backEndErrors = [];\n  const responses = (await Promise.all(\n    getBackEndContracts(state).map(async meta => {\n      if (\n        !meta ||\n        !meta.url ||\n        !meta.functions ||\n        !meta.functions.find(f => f.name === state.functionName)\n      ) {\n        console.warn(\n          `Weird back end ${meta.url}, ${JSON.stringify(meta, null, 4)}`\n        );\n        return null; // Invalid back end\n      }\n      let res;\n      try {\n        res = await httpPost(`${meta.url}/request`, {\n          contractAddress: state.contractAddress,\n          from: state.currentEthereumAccount,\n          functionName: state.functionName,\n          functionArguments: state.functionArguments\n        });\n      } catch (e) {\n        backEndErrors.push([meta.url, e]);\n        console.warn(`Weird back end, POST ${meta.url}/request:`, e);\n        return null;\n      }\n      if (\n        !res ||\n        !res.request ||\n        !res.request.id ||\n        !(res.request.signatureOptions instanceof Array) ||\n        res.request.signatureOptions.length === 0\n      ) {\n        console.warn(\n          `Weird back end ${meta.url} response, ${JSON.stringify(res)}`\n        );\n        return null;\n      }\n      return [res.request, meta];\n    })\n  )).filter(r => !!r);\n\n  if (lastBackEndRequestId !== backEndRequestId) {\n    return; // Prevent concurrent requests\n  }\n\n  if (\n    (backEndErrors.length > 0 && !state.backendWarningMessage) ||\n    responses.length === 0\n  ) {\n    runInAction(() => {\n      const [url, e] =\n        backEndErrors.length > 0 ? backEndErrors[0] : ['*', 'silence'];\n      state.backendWarningMessage = WARNING_BACK_END_ERROR(url, e.toString());\n    });\n    return;\n  }\n\n  const bestBackEnd = responses.reduce(\n    (best, be) => (be[0].fee < best[0].fee ? be : best),\n    responses[0]\n  );\n\n  runInAction(() => {\n    if (state.backendWarningMessage) {\n      state.backendWarningMessage = null;\n    }\n    if (bestBackEnd) {\n      state.approvedDelegationRequest = Object.assign(bestBackEnd[0], {\n        meta: toJS(bestBackEnd[1])\n      });\n    }\n  });\n});\n\nconst clearAndRequest = action(() => {\n  backEndRequested = false;\n  if (state.backendWarningMessage) {\n    state.backendWarningMessage = null;\n  }\n  if (state.approvedDelegationRequest) {\n    state.approvedDelegationRequest = null;\n  }\n  requestBackEnd();\n});\n\nobserve(state, 'warningMessageReadOnly', requestBackEnd);\nobserve(state, 'contractAddress', clearAndRequest);\nobserve(state, 'currentEthereumAccount', clearAndRequest);\nobserve(state, 'functionArguments', clearAndRequest);\n","import { observe, action, runInAction, toJS } from 'mobx';\nimport {\n  WARNING_BACK_END_ERROR,\n  WARNING_CONFIRMATION_BACK_END_ERROR,\n  INFO_PLEASE_SIGN,\n  INFO_PLEASE_SIGN_AGAIN,\n  INFO_PROCESSING\n} from '../../const';\nimport { httpPost, signData } from '../../utils';\nimport state from '../state';\n\nobserve(\n  state,\n  'delegationConfirmationRequestPending',\n  action(async () => {\n    // React only to pending request start\n    if (\n      state.delegationConfirmationRequestPending !== true ||\n      !state.approvedDelegationRequest\n    ) {\n      return;\n    }\n\n    // Sign with available signature standards\n    const oldFixed = state.fixed;\n    runInAction(() => (state.fixed = true));\n    const signatureOptionsPriority = ['eth_signTypedData', 'eth_personalSign'];\n    const signOptionsByPriority = toJS(\n      state.approvedDelegationRequest.signatureOptions\n    ).sort(\n      (o1, o2) =>\n        (signatureOptionsPriority.indexOf(o2.standard) + 1 || 999) -\n        (signatureOptionsPriority.indexOf(o1.standard) + 1 || 999)\n    );\n\n    let signOption;\n    let signature = '';\n    let signatureStandard = '';\n    while ((signOption = signOptionsByPriority.pop())) {\n      const { standard, dataToSign } = signOption;\n      try {\n        signature = await new Promise((res, rej) => {\n          runInAction(\n            () =>\n              (state.globalInfoMessage = INFO_PLEASE_SIGN(\n                signOptionsByPriority.length\n                  ? () => rej(new Error('Skipped by user'))\n                  : null\n              ))\n          );\n          try {\n            signData(state, standard, dataToSign)\n              .then(res)\n              .catch(rej);\n          } catch (e) {\n            rej(e);\n          }\n        });\n      } catch (e) {\n        // Do nothing - it should switch to the next available signature standard\n      }\n      signatureStandard = standard;\n      if (signature) {\n        break;\n      }\n    }\n    if (!signature) {\n      runInAction(() => {\n        state.globalInfoMessage = INFO_PLEASE_SIGN_AGAIN(\n          toJS(state.approvedDelegationRequest.signatureOptions).map(\n            o => o.standard\n          )\n        );\n        state.delegationConfirmationRequestPending = false;\n        state.fixed = oldFixed;\n      });\n      return;\n    } else {\n      runInAction(() => (state.globalInfoMessage = INFO_PROCESSING));\n    }\n\n    // Confirm request with signature\n    let response;\n    try {\n      response = await httpPost(\n        `${state.approvedDelegationRequest.meta.url}/confirm`,\n        {\n          requestId: state.approvedDelegationRequest.id,\n          signatureStandard,\n          signature\n        }\n      );\n    } catch (e) {\n      runInAction(() => {\n        state.globalInfoMessage = '';\n        state.globalWarningMessage = WARNING_CONFIRMATION_BACK_END_ERROR(\n          state.approvedDelegationRequest.meta.url,\n          e + ''\n        );\n        state.delegationConfirmationRequestPending = false;\n        state.fixed = oldFixed;\n      });\n      console.error(e);\n      return;\n    }\n\n    // Process response\n    runInAction(() => {\n      if (!response || !response.result) {\n        state.globalWarningMessage = WARNING_BACK_END_ERROR(\n          state.approvedDelegationRequest.meta.url,\n          `Weird back end response: ${JSON.stringify(response)}`\n        );\n        return;\n      }\n      const result = response.result;\n      result.meta = state.approvedDelegationRequest.meta;\n      state.approvedDelegationResponse = result;\n    });\n  })\n);\n","import { observe, action } from 'mobx';\nimport state from '../state';\n\nconst loadTokenMeta = action(() => {\n  const backEnds = state.backEndsByContractReadOnly[state.contractAddress];\n  if (!backEnds || backEnds.length === 0 || !backEnds[0].constants) {\n    return;\n  }\n  const constants = backEnds[0].constants;\n  state.contractSymbolReadOnly =\n    constants.symbol || state.contractSymbolReadOnly;\n  state.contractDecimalsReadOnly =\n    constants.decimals || state.contractDecimalsReadOnly;\n});\n\nobserve(state, 'contractAddress', loadTokenMeta);\nobserve(state, 'backEndsByContractReadOnly', loadTokenMeta);\n","import { observe, action } from 'mobx';\nimport {\n  WARNING_BACK_END_INVALID_RESPONSE,\n  WARNING_TRANSACTION_FAILED,\n  INFO_TRANSACTION_MINED,\n  INFO_WAIT_FOR_TRANSACTION\n} from '../../const';\nimport { httpGet } from '../../utils';\nimport state from '../state';\n\nlet pollingInterval = 0;\nobserve(\n  state,\n  'approvedDelegationResponse',\n  action(() => {\n    clearInterval(pollingInterval);\n    if (!state.approvedDelegationResponse) {\n      return;\n    }\n    if (state.approvedDelegationResponse.status === 'mined') {\n      state.globalInfoMessage = INFO_TRANSACTION_MINED(\n        state.approvedDelegationResponse.transactionHash,\n        state.selectedNetworkNameReadOnly\n      );\n      if (\n        state.successRedirectUrl &&\n        typeof state.successRedirectUrl === 'string'\n      ) {\n        window.location.replace(state.successRedirectUrl);\n      }\n      return;\n    } else if (state.approvedDelegationResponse.status === 'failed') {\n      state.globalWarningMessage = WARNING_TRANSACTION_FAILED(\n        state.approvedDelegationResponse.id,\n        state.approvedDelegationResponse.reason\n      );\n      return;\n    } else {\n      state.globalInfoMessage = INFO_WAIT_FOR_TRANSACTION(\n        state.approvedDelegationResponse.transactionHash,\n        state.selectedNetworkNameReadOnly\n      );\n    }\n    pollingInterval = setInterval(updateFromBackEnd, 10000);\n    // Do not update immediately but after one interval\n  })\n);\n\nasync function updateFromBackEnd() {\n  const { id, status, meta } = state.approvedDelegationResponse;\n  let actualStatus;\n  try {\n    actualStatus = await httpGet(`${meta.url}/status/${id}`);\n  } catch (e) {\n    // eslint-disable-next-line require-atomic-updates\n    state.globalWarningMessage = WARNING_BACK_END_INVALID_RESPONSE(\n      meta.url,\n      e.toString()\n    );\n    return;\n  }\n  if (!actualStatus || !actualStatus.result) {\n    // eslint-disable-next-line require-atomic-updates\n    state.globalWarningMessage = WARNING_BACK_END_INVALID_RESPONSE(\n      meta.url,\n      `weird response ${actualStatus}`\n    );\n    return;\n  }\n\n  // Process status\n  const result = actualStatus.result;\n  if (result.status === status) {\n    return;\n  }\n\n  result.meta = meta;\n  // eslint-disable-next-line require-atomic-updates\n  action(() => {\n    state.approvedDelegationResponse = result;\n  })();\n}\n","import { observe, action } from 'mobx';\nimport state from '../state';\n\nobserve(\n  state,\n  'selectedNetwork',\n  action(() => {\n    state.selectedNetworkNameReadOnly =\n      state.selectedNetwork.name === 'homestead'\n        ? 'mainnet'\n        : state.selectedNetwork.name;\n  })\n);\n","import { observe } from 'mobx';\nimport state from '../state';\nimport { updateUrl } from '../../utils';\n\nconst observeProps = [\n  'contractAddress',\n  'functionName',\n  'functionArguments',\n  'fixed',\n  'customBackEndsList',\n  'successRedirectUrl'\n];\n\nobserveProps.forEach(prop => observe(state, prop, () => updateUrl(state)));\n","import state from './state';\nimport { action, runInAction } from 'mobx';\nimport { parse } from 'qs';\nimport {\n  DEFAULT_DELEGATED_TX_BACK_ENDS,\n  NETWORK_BY_CHAIN_ID,\n  UNKNOWN_NETWORK,\n  WARNING_WRONG_URL_PARAMETER\n} from '../const';\nimport { httpGet, isValidEthereumAddress, updateUrl } from '../utils';\n\nconst url = parse(window.location.search.slice(1));\n\n/// Sync actions:\n/// - Parse URL components\n/// - Determine target network\naction(() => {\n  if (url.network) {\n    if (url.network === 'mainnet') {\n      url.network = 'homestead';\n    }\n    if (parseInt(url.network) === +url.network) {\n      state.targetNetwork = NETWORK_BY_CHAIN_ID[url.network];\n    } else {\n      state.targetNetwork = Object.values(NETWORK_BY_CHAIN_ID).find(\n        net => net.name === url.network\n      );\n    }\n    // If bad network configured\n    if (!state.targetNetwork) {\n      state.targetNetwork = UNKNOWN_NETWORK;\n      state.globalWarningMessage = WARNING_WRONG_URL_PARAMETER(\n        'network',\n        url.network\n      );\n    }\n  }\n  // Keep below network\n  if (url.contractAddress) {\n    if (isValidEthereumAddress(url.contractAddress)) {\n      state.contractAddress = url.contractAddress;\n    } else {\n      state.globalWarningMessage = WARNING_WRONG_URL_PARAMETER(\n        'contractAddress',\n        url.contractAddress\n      );\n    }\n  }\n  if (url.functionName) {\n    state.functionName = url.functionName;\n  }\n  if (url.functionArguments) {\n    state.functionArguments = url.functionArguments.split(',');\n  }\n  if (typeof url.fixed !== 'undefined') {\n    state.fixed = true;\n  }\n  if (url.customBackEnds) {\n    state.customBackEndsList = url.customBackEnds.split(',');\n  }\n  if (\n    typeof url.successRedirectUrl === 'string' &&\n    url.successRedirectUrl.indexOf('java') !== 0 // Avoid 'javascript:'\n  ) {\n    state.successRedirectUrl = url.successRedirectUrl;\n  }\n  updateUrl(state);\n})();\n\n/// Async actions:\n/// - Fetch back ends metadata\n/// Because querying back ends can take up to 30 seconds, this function throttles the responses\n/// and adds them to the state once they are ready.\naction(async () => {\n  const backEndsReady = [];\n  const addBackEnds = () => {\n    runInAction(() => {\n      let backEnd, url;\n      while (([backEnd, url] = backEndsReady.pop() || []) && backEnd) {\n        state.backEndsMeta.push(backEnd);\n        if (!backEnd.contracts || !(backEnd.contracts instanceof Array)) {\n          console.warn(\n            `Back end endpoint GET ${url} does not provide contracts[]`\n          );\n        }\n        // eslint-disable-next-line no-unused-vars\n        for (const contractBackEnd of backEnd.contracts || []) {\n          state.backEndsByContractReadOnly = {\n            ...state.backEndsByContractReadOnly,\n            [contractBackEnd.address]: (\n              state.backEndsByContractReadOnly[contractBackEnd.address] || []\n            ).concat({\n              ...contractBackEnd,\n              url,\n              networkChainId: backEnd.networkChainId,\n              networkName: backEnd.networkName\n            })\n          };\n        }\n      }\n    });\n  };\n  const interval = setInterval(addBackEnds, 250);\n  const backEnds = (state.customBackEndsList &&\n  state.customBackEndsList.length > 0\n    ? state.customBackEndsList\n    : DEFAULT_DELEGATED_TX_BACK_ENDS\n  ).filter((be, i, arr) => arr.indexOf(be) === i); // Deletes duplicates\n  await Promise.all(\n    backEnds.map(async url => {\n      url = await url; // Resolve promises\n      try {\n        const meta = await httpGet(url);\n        backEndsReady.push([meta, url]);\n      } catch (e) {\n        console.error(`Back end ${url} responds with error.`, e);\n      }\n    })\n  );\n  // Clear the interval once all back ends are loaded\n  clearInterval(interval);\n  addBackEnds();\n})();\n","import React from 'react';\nimport './TransferArrow.css';\n\nexport default function TransferArrow() {\n  return (\n    <div className=\"round\">\n      <div className=\"cta\">\n        <span className=\"arrow arr1 next\"></span>\n        <span className=\"arrow arr2 next\"></span>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TokenLogo.css';\n\nexport default function TokenLogo(props) {\n  const tokenAddress =\n    props.tokenAddress || '0x82f4ded9cec9b5750fbff5c2185aee35afc16587';\n  const assetUrl = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${tokenAddress}/logo.png`;\n  return <img className=\"token-logo-img\" src={assetUrl} alt=\"\" />;\n}\n\nTokenLogo.propTypes = {\n  tokenAddress: PropTypes.string\n};\n","import React from 'react';\nimport './WarningIcon.css';\n\nexport default function WarningIcon() {\n  return (\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"16px\"\n      height=\"16px\"\n      viewBox=\"0 0 554.2 554.199\"\n      className=\"warning-icon\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M538.5,386.199L356.5,70.8c-16.4-28.4-46.7-45.9-79.501-45.9c-32.8,0-63.1,17.5-79.5,45.9L12.3,391.6\n        c-16.4,28.4-16.4,63.4,0,91.8C28.7,511.8,59,529.3,91.8,529.3H462.2c0.101,0,0.2,0,0.2,0c50.7,0,91.8-41.101,91.8-91.8\n        C554.2,418.5,548.4,400.8,538.5,386.199z M316.3,416.899c0,21.7-16.7,38.3-39.2,38.3s-39.2-16.6-39.2-38.3V416\n        c0-21.601,16.7-38.301,39.2-38.301S316.3,394.3,316.3,416V416.899z M317.2,158.7L297.8,328.1c-1.3,12.2-9.4,19.8-20.7,19.8\n        s-19.4-7.7-20.7-19.8L237,158.6c-1.3-13.1,5.801-23,18-23H299.1C311.3,135.7,318.5,145.6,317.2,158.7z\"\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport './InfoIcon.css';\n\nexport default function InfoIcon() {\n  return (\n    <svg\n      version=\"1.1\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"16px\"\n      height=\"16px\"\n      viewBox=\"0 0 23.625 23.625\"\n      className=\"info-icon\"\n    >\n      <g>\n        <path\n          fill=\"currentColor\"\n          d=\"M11.812,0C5.289,0,0,5.289,0,11.812s5.289,11.813,11.812,11.813s11.813-5.29,11.813-11.813\n        S18.335,0,11.812,0z M14.271,18.307c-0.608,0.24-1.092,0.422-1.455,0.548c-0.362,0.126-0.783,0.189-1.262,0.189\n        c-0.736,0-1.309-0.18-1.717-0.539s-0.611-0.814-0.611-1.367c0-0.215,0.015-0.435,0.045-0.659c0.031-0.224,0.08-0.476,0.147-0.759\n        l0.761-2.688c0.067-0.258,0.125-0.503,0.171-0.731c0.046-0.23,0.068-0.441,0.068-0.633c0-0.342-0.071-0.582-0.212-0.717\n        c-0.143-0.135-0.412-0.201-0.813-0.201c-0.196,0-0.398,0.029-0.605,0.09c-0.205,0.063-0.383,0.12-0.529,0.176l0.201-0.828\n        c0.498-0.203,0.975-0.377,1.43-0.521c0.455-0.146,0.885-0.218,1.29-0.218c0.731,0,1.295,0.178,1.692,0.53\n        c0.395,0.353,0.594,0.812,0.594,1.376c0,0.117-0.014,0.323-0.041,0.617c-0.027,0.295-0.078,0.564-0.152,0.811l-0.757,2.68\n        c-0.062,0.215-0.117,0.461-0.167,0.736c-0.049,0.275-0.073,0.485-0.073,0.626c0,0.356,0.079,0.599,0.239,0.728\n        c0.158,0.129,0.435,0.194,0.827,0.194c0.185,0,0.392-0.033,0.626-0.097c0.232-0.064,0.4-0.121,0.506-0.17L14.271,18.307z\n        M14.137,7.429c-0.353,0.328-0.778,0.492-1.275,0.492c-0.496,0-0.924-0.164-1.28-0.492c-0.354-0.328-0.533-0.727-0.533-1.193\n        c0-0.465,0.18-0.865,0.533-1.196c0.356-0.332,0.784-0.497,1.28-0.497c0.497,0,0.923,0.165,1.275,0.497\n        c0.353,0.331,0.53,0.731,0.53,1.196C14.667,6.703,14.49,7.101,14.137,7.429z\"\n        />\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nexport default function Button(props) {\n  const { loading, ...rest } = props;\n  return (\n    <button {...rest}>\n      {[\n        loading ? (\n          <div className=\"la-ball-spin-clockwise la-sm\" key=\"la-first\">\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n        ) : null\n      ].concat(props.children)}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  children: PropTypes.any,\n  loading: PropTypes.bool\n};\n","import { providers } from 'ethers';\n\nexport async function wrapEthersProvider(\n  web3Provider = null,\n  reportStatus = () => {}\n) {\n  if (!web3Provider) {\n    web3Provider = await getWeb3Provider(reportStatus);\n  }\n  return new providers.Web3Provider(web3Provider.currentProvider);\n}\n\nexport async function getWeb3Provider(reportStatus) {\n  // const timeout = setTimeout(\n  //   () =>\n  //     new Toast(\n  //       'Please, sign in with your crypto wallet',\n  //       Toast.TYPE_INFO,\n  //       Toast.TIME_LONG\n  //     ),\n  //   5000\n  // );\n\n  if (window.ethereum) {\n    window.web3 = new window.Web3(window.ethereum);\n    try {\n      reportStatus('Please, allow an access to this page in your wallet');\n      await window.ethereum.enable();\n    } catch (error) {\n      // clearTimeout(timeout);\n      throw new Error(\"You've denied the access to see your account address.\");\n    }\n  } else if (window.web3) {\n    window.web3 = new window.Web3(window.web3.currentProvider);\n  } else {\n    // clearTimeout(timeout);\n    return null;\n  }\n\n  // clearTimeout(timeout);\n\n  return window.web3;\n}\n","import React from 'react';\nimport { action, runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport './App.css';\nimport { state } from './state';\nimport TransferArrow from './components/TransferArrow';\nimport TokenLogo from './components/TokenLogo';\nimport WarningIcon from './components/WarningIcon';\nimport InfoIcon from './components/InfoIcon';\nimport Button from './components/Button';\nimport {\n  formatEthereumAddress,\n  formatTokenValue,\n  getBackEndContracts,\n  parseTokenValueFromInput\n} from './utils';\nimport {\n  NETWORK_BY_CHAIN_ID,\n  UNKNOWN_NETWORK,\n  WARNING_UNKNOWN_NETWORK,\n  WARNING_WRONG_NETWORK,\n  WARNING_CUSTOM_MESSAGE,\n  WARNING_UNABLE_TO_CONNECT_WEB3\n} from './const';\nimport { getWeb3Provider, wrapEthersProvider } from './modules/ethereum';\n\nconst getContractNetworks = () =>\n  getBackEndContracts(state).map(b => NETWORK_BY_CHAIN_ID[b.networkChainId]);\nconst isCurrentNetworkTarget = () =>\n  state.selectedNetwork.chainId === state.targetNetwork.chainId;\nconst isButtonActive = () =>\n  !state.warningMessageReadOnly &&\n  state.approvedDelegationRequest &&\n  !state.delegationConfirmationRequestPending;\n\nclass App extends React.PureComponent {\n  state = {\n    tick: 0\n  };\n\n  accountUpdateTimeout = 1;\n  web3Provider = null;\n  tickerInterval = 0;\n\n  ticker = () => {\n    if (!state.approvedDelegationRequest) {\n      return;\n    }\n    this.setState({\n      tick: this.state.tick + 1\n    });\n  };\n\n  updateFromProvider = action(async () => {\n    if (!state.ethersProvider) {\n      // Displays default initWarningMessage\n      return;\n    }\n    const account = (await state.ethersProvider.listAccounts())[0];\n    let network;\n    // this.provider.getNetwork() always returns the same net, looks like a bug in Ethers.js. Using the native method\n    do {\n      // eslint-disable-next-line require-atomic-updates\n      network = await new Promise((res, rej) =>\n        this.web3Provider.version.getNetwork((e, r) => (e ? rej(e) : res(r)))\n      );\n      if (!NETWORK_BY_CHAIN_ID[network]) {\n        runInAction(\n          // eslint-disable-next-line no-loop-func\n          () => (state.networkWarningMessage = WARNING_UNKNOWN_NETWORK(network))\n        );\n        await new Promise(r => setTimeout(r, 5000));\n      }\n    } while (!NETWORK_BY_CHAIN_ID[network]);\n\n    runInAction(() => {\n      // Update account\n      if (state.currentEthereumAccount !== account) {\n        state.currentEthereumAccount = account;\n      }\n\n      // Update selected network\n      if (+network !== state.selectedNetwork.chainId) {\n        state.selectedNetwork = NETWORK_BY_CHAIN_ID[network] || UNKNOWN_NETWORK;\n      }\n\n      // Make Target Network a network which has the selected contract.\n      const contractsInOtherNetworks = getContractNetworks().filter(\n        net => net.chainId !== state.targetNetwork.chainId\n      );\n      if (\n        contractsInOtherNetworks.length &&\n        state.targetNetwork.chainId !== contractsInOtherNetworks[0].chainId\n      ) {\n        state.targetNetwork = contractsInOtherNetworks[0];\n      }\n\n      // Target network warning\n      if (!isCurrentNetworkTarget()) {\n        if (!state.networkWarningMessage) {\n          state.networkWarningMessage = WARNING_WRONG_NETWORK(\n            state.targetNetwork.name,\n            state.selectedNetwork.name\n          );\n        }\n      } else {\n        state.networkWarningMessage = null;\n      }\n    });\n\n    if (this.accountUpdateTimeout > 0) {\n      this.accountUpdateTimeout = setTimeout(this.updateFromProvider, 100); // Loop\n    }\n  });\n\n  componentDidMount = action(async () => {\n    this.tickerInterval = setInterval(this.ticker, 1000);\n    try {\n      this.web3Provider = await getWeb3Provider(message =>\n        runInAction(\n          () => (state.initWarningMessage = WARNING_CUSTOM_MESSAGE(message))\n        )\n      );\n      if (!this.web3Provider) {\n        // Show default initWarningMessage\n        return;\n      }\n      let provider = await wrapEthersProvider(this.web3Provider);\n      runInAction(() => {\n        state.initWarningMessage = null;\n        state.ethersProvider = provider;\n      });\n      await this.updateFromProvider();\n      // console.log('Provider', provider);\n    } catch (e) {\n      runInAction(\n        () =>\n          (state.initWarningMessage = WARNING_UNABLE_TO_CONNECT_WEB3(\n            e.toString()\n          ))\n      );\n      console.error(e);\n    }\n  });\n\n  componentWillUnmount() {\n    clearTimeout(this.accountUpdateTimeout);\n    clearInterval(this.tickerInterval);\n    this.accountUpdateTimeout = 0;\n  }\n\n  actionButtonClick = action(async () => {\n    if (!isButtonActive()) {\n      return;\n    }\n    // There is a reaction on changing this prop which enables signing / back end request\n    runInAction(() => (state.delegationConfirmationRequestPending = true));\n  });\n\n  onRecipientChange = action(\n    ({ target: { value } }) =>\n      (state.functionArguments = [value, ...state.functionArguments.slice(1)])\n  );\n\n  onValueChange = action(\n    ({ target: { value } }) =>\n      (state.functionArguments = [\n        state.functionArguments[0],\n        parseTokenValueFromInput(value, state.contractDecimalsReadOnly),\n        ...state.functionArguments.slice(2)\n      ])\n  );\n\n  render() {\n    const sender = formatEthereumAddress(state.currentEthereumAccount);\n    const {\n      contractAddress,\n      contractSymbolReadOnly,\n      functionName,\n      functionArguments,\n      contractDecimalsReadOnly,\n      approvedDelegationRequest\n    } = state;\n    const recipient =\n      (functionArguments && functionArguments.length && functionArguments[0]) ||\n      '0x6f8103606b649522aF9687e8f1e7399eff8c4a6B';\n    const value = formatTokenValue(\n      (functionArguments && functionArguments.length && functionArguments[1]) ||\n        Math.pow(10, contractDecimalsReadOnly).toString(),\n      contractDecimalsReadOnly\n    );\n    const feeData =\n      (approvedDelegationRequest &&\n        approvedDelegationRequest.fees &&\n        approvedDelegationRequest.fees.length &&\n        approvedDelegationRequest.fees[0]) ||\n      {};\n    const fee = formatTokenValue(\n      feeData.value || '0',\n      feeData.decimals || contractDecimalsReadOnly\n    );\n    let warning = state.warningMessageReadOnly;\n    const isLoading =\n      !warning &&\n      (!state.approvedDelegationRequest ||\n        state.delegationConfirmationRequestPending);\n    const tzOffset = new Date().getTimezoneOffset() * 60 * 1000;\n    const nowUtc = Date.now() - tzOffset;\n    const expiresIn = !state.approvedDelegationRequest\n      ? ''\n      : new Date(\n          Math.max(\n            tzOffset,\n            new Date(state.approvedDelegationRequest.expiresAt).getTime() -\n              nowUtc\n          )\n        )\n          .toTimeString()\n          .replace(/\\s.*$/, '')\n          .replace(/^00:/, '');\n\n    return (\n      <div className=\"app\">\n        <section />\n        <section className=\"app-body\">\n          <h1 className=\"head-title\">\n            {functionName === 'transfer'\n              ? 'Transfer'\n              : functionName === 'approveAndCall'\n              ? 'Approve and Call'\n              : functionName}\n          </h1>\n          <div className=\"token-info\">\n            {state.fixed ? (\n              value\n            ) : (\n              <input\n                value={value}\n                onChange={this.onValueChange}\n                className=\"bold\"\n                style={{ width: `${17 * (value.length - 1) + 5}px` }}\n              />\n            )}{' '}\n            <TokenLogo tokenAddress={contractAddress} />{' '}\n            {contractSymbolReadOnly}\n          </div>\n          <div className=\"sender-and-recipient-block\">\n            <div>\n              <div>\n                <input value={sender} disabled />\n              </div>\n              <div className=\"address-sub\">Sender (You)</div>\n            </div>\n            <TransferArrow />\n            <div>\n              <div>\n                <input\n                  value={recipient}\n                  onChange={this.onRecipientChange}\n                  disabled={state.fixed}\n                  className=\"expandable\"\n                />\n                <div className=\"address-sub\">\n                  {functionName === 'approveAndCall' ? 'Contract' : 'Recipient'}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"spec-table\">\n            <div className=\"spec-table-row\">\n              <div>Fee for Sender</div>\n              <div className=\"strong\">\n                {fee} <TokenLogo tokenAddress={contractAddress} />{' '}\n                {contractSymbolReadOnly}\n              </div>\n            </div>\n            {!state.approvedDelegationRequest ? null : (\n              <div className=\"spec-table-row\">\n                <div>Fee Expires In</div>\n                <div>{expiresIn}</div>\n              </div>\n            )}\n            <div className=\"spec-table-row\">\n              <div>Confirmation Time</div>\n              <div>~3 minutes</div>\n            </div>\n          </div>\n          {(warning || state.globalInfoMessage) && (\n            <div\n              className={\n                'warning-message' +\n                (!warning && state.globalInfoMessage ? ' info' : '')\n              }\n            >\n              {warning ? <WarningIcon /> : <InfoIcon />}{' '}\n              {warning || state.globalInfoMessage}\n            </div>\n          )}\n          {state.approvedDelegationResponse &&\n          state.approvedDelegationResponse.status === 'mined' ? null : (\n            <div className=\"center\">\n              <Button\n                className={(!isButtonActive() && 'unavailable') || ''}\n                loading={isLoading}\n                onClick={this.actionButtonClick}\n              >\n                {state.approvedDelegationResponse &&\n                (state.approvedDelegationResponse.status === 'new' ||\n                  state.approvedDelegationResponse.status === 'mining' ||\n                  state.approvedDelegationResponse.status === 'confirmed')\n                  ? 'Waiting'\n                  : 'Confirm'}\n              </Button>\n            </div>\n          )}\n          <div className=\"spec-table\">\n            Please note that{' '}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://kuna.io\">\n              some exchanges\n            </a>{' '}\n            may not support this type of transactions (it&apos;s their issue).\n            Use with caution.\n          </div>\n        </section>\n        <section className=\"app-footer\">\n          Universal Delegated Transactions for Ethereum\n          <br />\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/ZitRos/ethereum-delegated-tx-widget\"\n          >\n            Source Code\n          </a>{' '}\n          |{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/ZitRos/ethereum-delegated-tx-service#setup\"\n          >\n            Plug In Your Token\n          </a>{' '}\n          |{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/ZitRos/ethereum-delegated-tx-widget/LICENSE\"\n          >\n            License\n          </a>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}